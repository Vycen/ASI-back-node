{"version":3,"sources":["actions/index.js","components/common/content/components/VisualComponent.js","components/common/content/components/LightContent.js","components/common/content/components/FullContent.js","components/common/content/containers/Content.js","components/addContentPanel/containers/AddContentPanel.js","components/browseContentPanel/containers/BrowseContentPanel.js","components/common/slid/components/EditMetaSlid.js","components/common/slid/containers/Slid.js","components/common/presentation/components/SlidList.js","components/common/presentation/components/EditMetaPres.js","components/common/presentation/containers/Presentation.js","components/browsePresentationPanel/containers/CommandButtons.js","components/browsePresentationPanel/containers/BrowsePresentationPanel.js","components/editSlidePanel/containers/PresentationNavigation.js","components/editSlidePanel/containers/EditSlidPanel.js","services/Comm.js","components/mainPanel/Main.js","pages/HomePage.js","App.js","serviceWorker.js","middleware/index.js","reducers/UpdateModelReducer.js","reducers/SelectedReducer.js","reducers/CommandReducer.js","reducers/index.js","index.js","services/Tools.js"],"names":["setSelectedSlid","selectedSlide","type","updatePresentation","presentation","updateSlid","updatedSlide","sendNavCmd","action","pres","VisualComponent","data","this","props","react_default","a","createElement","className","src","renderFrame","renderImage","Component","LightContent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","content","components_VisualComponent","FullContent","title","id","Content","ev","_this$props","updateDraggedElt","_this","_this$props2","onlyContent","draggable","onDrag","drag","components_FullContent","components_LightContent","connect","state","ownProps","objectSpread","AddContentPanel","open","ext","setState","target","value","file","_this2","fReader","FileReader","files","readAsDataURL","onloadend","event","result","replace","console","log","_this3","_this$state","addContent","actions","FlatButton_default","label","primary","onClick","handleClose","FloatingActionButton_default","handleOpen","add_default","Dialog_default","modal","for","onChange","handleTitleChange","handleTypeChange","accept","handleFileChange","handleScrChange","BrowseContentPanel","contentMap","keys","map","index","containers_Content","key","containers_AddContentPanel","UpdateModelReducer","EditMetaSlid","updateCurrentSlide","slide","txt","htmlFor","handleChangeTitle","rows","handleChangeTxt","Slid","draggedElt","1","stopPropagation","preventDefault","_this$props3","displayMode","updateSelectedSlid","onDrop","drop","onDragOver","length","EditMetaSlid_EditMetaSlid","SelectedReducer","SlidList","slidArray","containers_Slid","EditMetaPres","desc","description","handleChangeDesc","Presentation","objectDestructuringEmpty","style","marginTop","components_EditMetaPres","components_SlidList","CommandButtons","mini","add","remove","remove_default","save_default","BrowsePresentationPanel","containers_CommandButtons","Presentation_Presentation","PresentationNavigation","RaisedButton_default","skip_previous_default","fast_rewind_default","play_arrow_default","pause_default","fast_forward_default","skip_next_default","EditSlidePanel","updateCurrentSlid","containers_PresentationNavigation","io","require","axios","Comm","comm","socket","instance","create","emitOnConnect","bind","presId","callback","callbackErr","get","then","size","loadedPres","catch","error","i","c_obj","presJson","post","response","contentJson","fileC","FormData","append","message","uuid","emit","test","process","SOCKET_URL","on","CMD","presUUID","PRES_ID","Main","updateContentMap","loadContent","e","loadPres","prevProps","cmdPres","savPres","err","containers_BrowsePresentationPanel","EditSlidPanel","containers_BrowseContentPanel","CommandReducer","HomePage","mainPanel_Main","App","MuiThemeProvider_default","pages_HomePage","Boolean","window","location","hostname","match","asyncDispatchMiddleware","store","next","syncActivityFinished","actionQueue","flushQueue","forEach","dispatch","actionWithAsyncDispatch","assign","asyncDispatch","asyncAction","concat","Tools","reducer","undefined","newSlide","generateUUID","push","findIndex","splice","fileContent","fileName","newContent","savContent","resp","defineProperty","socketConnection","begin","backward","play","pause","forward","end","appReducers","combineReducers","createStore","AppStore","applyMiddleware","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","Date","getTime","c","r","Math","random","floor","toString","array","slidId","module","exports"],"mappings":"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","file":"static/js/main.a43d6ccd.chunk.js","sourcesContent":["export const setSelectedSlid = (selectedSlide) => {\n  return {\n    type: 'UPDATE_SELECTED_SLID',\n    selectedSlide\n  };\n};\n\nexport const updateContentMap = (contentMap) => {\n  return {\n    type: 'UPDATE_CONTENT_MAP',\n    contentMap\n  };\n};\n\nexport const updatePresentation = (presentation) => {\n  return {\n    type: 'UPDATE_PRESENTATION',\n    presentation\n  };\n};\n\nexport const updateSlid = (updatedSlide) => {\n  return {\n    type: 'UPDATE_PRESENTATION_SLIDS',\n    updatedSlide\n  };\n};\n\nexport const updateDraggedElt = (id) => {\n  return {\n    type: 'UPDATE_DRAGGED_ELT',\n    id\n  };\n};\n\nexport const addContent = (content) => {\n  return {\n    type: 'ADD_CONTENT',\n    content\n  };\n};\n\nexport const contentAdded = (newContent) => {\n  return {\n    type: 'CONTENT_ADDED',\n    newContent\n  };\n};\n\nexport const sendNavCmd = (action, pres) => {\n  return {\n    type: 'COMMAND_PRESENTATION',\n    action,\n    pres\n  };\n};","import React, {Component} from \"react\";\n\nclass VisualComponent extends Component {\n\n  renderFrame() {\n    const {data} = this.props;\n\n    return (\n      <iframe className='frame' src={data.src} />\n    )\n  }\n\n  renderImage() {\n    const {data} = this.props;\n\n    return (\n      <img className='image' src={data.src} />\n    )\n  }\n\n  render() {\n\n    const {data} = this.props;\n\n    if(data && (data.type === 'img' || data.type === 'img_url')) {\n      return this.renderImage();\n    }\n    else if(data && (data.type === 'video' || data.type === 'web')) {\n      return this.renderFrame()\n    }\n\n    return null;\n\n  }\n}\n\nexport default VisualComponent;","import React, {Component} from \"react\";\n\nimport VisualComponent from './VisualComponent';\n\nclass LightContent extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    const {content} = this.props;\n\n    return (\n      <VisualComponent data={content} />\n    )\n  }\n}\n\nexport default LightContent;","import React, {Component} from \"react\";\n\nimport VisualComponent from './VisualComponent';\n\nclass FullContent extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    const {content} = this.props;\n\n    return (\n      <div className=\"contentContainer\">\n        <VisualComponent data={content} />\n        <span className='contentTitle'>{content.title}</span>\n        <span className='contentSubtitle'>{\"ID: \" + content.id}</span>\n      </div>\n    )\n  }\n\n}\n\nexport default FullContent;","import React, {Component} from \"react\";\n\nimport './content.css'\n\nimport LightContent from '../components/LightContent';\nimport FullContent from '../components/FullContent';\nimport {connect} from \"react-redux\";\nimport {updateDraggedElt} from \"../../../../actions\";\n\nclass Content extends Component {\n\n  drag(ev) {\n    const {content, updateDraggedElt} = this.props;\n    updateDraggedElt(content.id);\n  }\n\n  render() {\n\n    const {content, onlyContent} = this.props;\n\n    return (\n      <div draggable={true} onDrag={(ev) => this.drag(ev)}>\n        {onlyContent && <FullContent content={content}/>}\n        {!onlyContent && <LightContent content={content}/>}\n      </div>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps\n  }\n}\n\nexport default connect(\n  mapStateToProps, {updateDraggedElt}\n)(Content)","import React, {Component} from \"react\";\n\nimport './addContentPanel.css';\n\nimport {connect} from 'react-redux';\n\nimport {addContent} from \"../../../actions\";\n\n\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\n\nclass AddContentPanel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      type: 'img',\n      title: '',\n      src: '',\n      data: null,\n      ext: null\n    };\n  }\n\n\n  handleOpen(){\n    this.setState({open: true});\n  };\n\n  handleClose(){\n    this.setState({\n      open: false,\n      type: 'img',\n      title: '',\n      src: '',\n      data: '',\n    });\n  };\n\n  handleTypeChange(type){\n    this.setState({type: type.target.value});\n  };\n\n  handleTitleChange(title){\n    this.setState({title: title.target.value});\n  };\n\n  handleScrChange(src){\n    this.setState({src: src.target.value});\n  };\n\n  handleFileChange(file){\n    const fReader = new FileReader();\n    this.setState({ext: file.target.files[0].type});\n    fReader.readAsDataURL(file.target.files[0]);\n    fReader.onloadend = (event) => {\n      let data = event.target.result;\n      this.setState({data: data.replace(/^data:image\\/\\w+;base64,/, \"\")});\n      console.log(event.target.result);\n    }\n  };\n\n  render() {\n\n    const {title, type, src, open, data, ext} = this.state;\n    const {addContent} = this.props;\n\n    const actions = [\n      <FlatButton\n        label=\"Cancel\"\n        primary={true}\n        onClick={() => this.handleClose()}\n      />,\n      <FlatButton\n        label=\"Add\"\n        primary={true}\n        onClick={() => {\n          addContent({\n            type,\n            title,\n            src,\n            data,\n            ext\n          });\n          this.handleClose()\n        }}\n      />,\n    ];\n\n    return (\n      <div>\n        <FloatingActionButton onClick={() => this.handleOpen()} className={\"buttonFloatUid\"}>\n          <ContentAdd />\n        </FloatingActionButton>\n        <Dialog\n          title=\"Add a new content\"\n          actions={actions}\n          modal={true}\n          open={open}\n        >\n          <div className={\"dialogContent\"}>\n            <label for=\"titleInput\">Title</label>\n            <input value={title} id='titleInput' type={'text'} onChange={(ev) => this.handleTitleChange(ev)}/>\n            <label for=\"typeInput\">Content Type</label>\n            <select value={type} id='typeInput' onChange={(ev) => this.handleTypeChange(ev)}>\n              <option value=\"img\">img</option>\n              <option value=\"img_url\">img_url</option>\n              <option value=\"video\">video</option>\n              <option value=\"web\">web</option>\n            </select>\n            {\n              type === 'img' &&\n              <div className={\"dialogContent\"}>\n                <label for=\"fileInput\">File</label>\n                <input id='fileInput' type={'file'} accept={'image/*'} onChange={(ev) => this.handleFileChange(ev)}/>\n              </div>\n            }\n            {\n              type !== 'img' &&\n              <div className={\"dialogContent\"}>\n                <label for=\"urlInput\">URL</label>\n                <input value={src} id='urlInput' type={'text'} onChange={(ev) => this.handleScrChange(ev)}/>\n              </div>\n            }\n\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps\n  }\n}\n\nexport default connect(\n  mapStateToProps, {addContent}\n)(AddContentPanel)","import React, {Component} from \"react\";\n\nimport './browseContentPanel.css';\n\nimport {connect} from 'react-redux';\n\nimport Content from '../../common/content/containers/Content';\nimport AddContentPanel from '../../addContentPanel/containers/AddContentPanel';\n\n\nclass BrowseContentPanel extends Component {\n\n  render() {\n\n    const {contentMap} = this.props;\n\n    return (\n      <div>\n        {\n         contentMap &&  Object.keys(contentMap).map((value, index) => {\n            return <Content key={index} content={contentMap[value]} onlyContent={true}/>\n          })\n        }\n        <AddContentPanel />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps,\n    contentMap: state.UpdateModelReducer.contentMap\n  }\n}\n\nexport default connect(\n  mapStateToProps, {}\n)(BrowseContentPanel)","import React, {Component} from 'react';\nimport './editMetaSlid.css'\n\nexport default class EditMetaSlid extends Component {\n\n  handleChangeTitle(title) {\n    const {updateCurrentSlide, slide} = this.props;\n    updateCurrentSlide({\n      ...slide,\n      title: title.target.value\n    })\n  }\n\n  handleChangeTxt(txt) {\n    const {updateCurrentSlide, slide} = this.props;\n    updateCurrentSlide({\n      ...slide,\n      txt: txt.target.value\n    })\n  }\n\n  render() {\n\n    const {slide} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"currentSlideTitle\">Title</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"currentSlideTitle\"\n          onChange={(title) => this.handleChangeTitle(title)}\n          value={slide.title}\n        />\n        <label htmlFor=\"currentSlideText\">Text</label>\n        <textarea\n          rows=\"5\"\n          type=\"text\"\n          className=\"form-control\"\n          id=\"currentSlideText\"\n          onChange={(txt) => this.handleChangeTxt(txt)}\n          value={slide.txt}>\n        </textarea>\n      </div>\n    );\n  }\n}","import React, {Component} from 'react';\nimport './slid.css'\n\nimport {connect} from 'react-redux';\nimport {setSelectedSlid, updateSlid} from '../../../../actions';\n\nimport VisualComponent from \"../../content/components/VisualComponent\";\nimport EditMetaSlid from \"../components/EditMetaSlid\";\n\n\nclass Slid extends Component {\n\n  updateSelectedSlid() {\n    const {slide, setSelectedSlid} = this.props;\n    setSelectedSlid(slide);\n  }\n\n  drop(ev) {\n    const {updateSlid, slide, draggedElt} = this.props;\n    updateSlid({\n      ...slide,\n      contentMap: {\n        \"1\": draggedElt\n      }\n    });\n  }\n\n  onDragOver(ev) {\n    ev.stopPropagation();\n    ev.preventDefault();\n  }\n\n  render() {\n    const {slide, displayMode, contentMap, updateSlid} = this.props;\n\n    return (\n      <div className=\"contentContainer\" onClick={() => this.updateSelectedSlid()} onDrop={(ev) => this.drop(ev)} onDragOver={(ev) => this.onDragOver(ev)}>\n        <span className='contentTitle'>{slide.title}</span>\n        <span className='contentSubtitle'>{slide.txt}</span>\n        {contentMap && slide.contentMap && Object.keys(slide.contentMap).length > 0 && <VisualComponent data={contentMap[slide.contentMap[\"1\"]]}/>}\n        {\n          displayMode === 'FULL_MNG' &&\n          <EditMetaSlid slide={slide} updateCurrentSlide={updateSlid}/>\n        }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps,\n    contentMap: state.UpdateModelReducer.contentMap,\n    draggedElt: state.SelectedReducer.draggedElt\n  }\n}\n\nexport default connect(\n  mapStateToProps, {setSelectedSlid, updateSlid}\n)(Slid)","import React, {Component} from 'react';\nimport '../containers/presentation.css'\n\nimport {connect} from 'react-redux';\n\nimport Slid from \"../../slid/containers/Slid\";\n\nclass SlidList extends Component {\n\n  render() {\n\n    const {presentation} = this.props;\n\n    return(\n      <div>\n        {\n          presentation && presentation.slidArray.map((slide, index) => {\n            return <Slid key={index} slide={slide} displayMode={\"SHORT\"}/>\n          })\n        }\n      </div>\n    );\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps,\n    presentation: state.UpdateModelReducer.presentation\n  }\n}\n\nexport default connect(\n  mapStateToProps, {}\n)(SlidList)","import React, {Component} from 'react';\n\nimport {connect} from 'react-redux';\n\nimport {updatePresentation} from \"../../../../actions\";\n\nimport '../containers/presentation.css'\n\nclass EditMetaPres extends Component {\n\n  handleChangeTitle(title) {\n    const {updatePresentation, presentation} = this.props;\n    updatePresentation({\n      ...presentation,\n      title: title.target.value\n    })\n  }\n\n  handleChangeDesc(desc) {\n    const {updatePresentation, presentation} = this.props;\n    updatePresentation({\n      ...presentation,\n      description: desc.target.value\n    })\n  }\n\n\n  render() {\n\n    const {presentation} = this.props;\n\n    return (\n      <div>\n        {\n          presentation &&\n          <div className=\"form-group\">\n            <label htmlFor=\"currentSlideTitle\">Title </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"currentSlideTitle\"\n              onChange={(title) => this.handleChangeTitle(title)}\n              value={presentation.title}\n            />\n            <label htmlFor=\"currentSlideText\">Description</label>\n            <textarea\n              rows=\"5\"\n              type=\"text\"\n              className=\"form-control\"\n              id=\"currentSlideText\"\n              onChange={(desc) => this.handleChangeDesc(desc)}\n              value={presentation.description}>\n            </textarea>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps,\n    presentation: state.UpdateModelReducer.presentation\n  }\n}\n\nexport default connect(\n  mapStateToProps, {updatePresentation}\n)(EditMetaPres)","import React, {Component} from 'react';\nimport './presentation.css'\nimport SlidList from \"../components/SlidList\";\nimport EditMetaPres from \"../components/EditMetaPres\";\n\nexport default class Presentation extends Component {\n\n  render() {\n\n    const {} = this.props;\n\n    return(\n      <div style={{marginTop: 20}}>\n        <EditMetaPres />\n        <SlidList />\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\n\nimport './browsePresentationPanel.css';\n\nimport {connect} from 'react-redux';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport ContentRemove from 'material-ui/svg-icons/content/remove';\nimport ContentSave from 'material-ui/svg-icons/content/save';\n\nimport {updateSlid, sendNavCmd} from \"../../../actions\";\n\n\nclass CommandButtons extends Component {\n\n  render() {\n\n    const {updateSlid, selectedSlide, sendNavCmd} = this.props;\n\n    return(\n      <div className={\"buttonFloatCommand\"}>\n        <FloatingActionButton mini onClick={() => updateSlid({add: true})}>\n          <ContentAdd />\n        </FloatingActionButton>\n        <FloatingActionButton mini onClick={() => updateSlid({...selectedSlide, remove: true})}>\n          <ContentRemove />\n        </FloatingActionButton>\n        <FloatingActionButton mini onClick={() => sendNavCmd('SAVE_CMD')}>\n          <ContentSave />\n        </FloatingActionButton>\n      </div>\n    );\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps,\n    selectedSlide: state.SelectedReducer.selectedSlide\n  }\n}\n\nexport default connect(\n  mapStateToProps, {updateSlid, sendNavCmd}\n)(CommandButtons)","import React, {Component} from \"react\";\n\nimport './browsePresentationPanel.css';\n\nimport {connect} from 'react-redux';\nimport Presentation from \"../../common/presentation/containers/Presentation\";\nimport CommandButtons from \"./CommandButtons\";\n\nclass BrowsePresentationPanel extends Component {\n\n  render() {\n    return(\n      <div className={'height-100'}>\n        <CommandButtons/>\n        <Presentation/>\n      </div>\n    );\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps\n  }\n}\n\nexport default connect(\n  mapStateToProps, {}\n)(BrowsePresentationPanel)","import React, {Component} from \"react\";\n\nimport './editSlidPanel.css';\n\nimport {connect} from 'react-redux';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Pause from 'material-ui/svg-icons/av/pause';\nimport Play from 'material-ui/svg-icons/av/play-arrow';\nimport Next from 'material-ui/svg-icons/av/skip-next';\nimport Previous from 'material-ui/svg-icons/av/skip-previous';\nimport Forward from 'material-ui/svg-icons/av/fast-forward';\nimport Rewind from 'material-ui/svg-icons/av/fast-rewind';\nimport ContentSave from 'material-ui/svg-icons/content/save';\n\nimport {updateSlid, sendNavCmd} from \"../../../actions\";\n\nclass PresentationNavigation extends Component {\n\n  render() {\n\n    const {sendNavCmd, presentation} = this.props;\n\n    return(\n      <div className={\"navigationButtons\"}>\n        <RaisedButton onClick={() => sendNavCmd(\"FIRST\")}>\n          <Previous />\n        </RaisedButton>\n        <RaisedButton onClick={() => sendNavCmd(\"PREVIOUS\")}>\n          <Rewind />\n        </RaisedButton>\n        <RaisedButton onClick={() => sendNavCmd(\"START\", presentation)}>\n          <Play />\n        </RaisedButton>\n        <RaisedButton onClick={() => sendNavCmd(\"STOP\")}>\n          <Pause />\n        </RaisedButton>\n        <RaisedButton onClick={() => sendNavCmd(\"NEXT\")}>\n          <Forward />\n        </RaisedButton>\n        <RaisedButton onClick={() => sendNavCmd(\"LAST\")}>\n          <Next />\n        </RaisedButton>\n      </div>\n    );\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps,\n    presentation: state.UpdateModelReducer.presentation\n  }\n}\n\nexport default connect(\n  mapStateToProps, {sendNavCmd}\n)(PresentationNavigation)","import React, {Component} from 'react';\nimport './editSlidPanel.css';\nimport Slid from \"../../common/slid/containers/Slid\";\nimport PresentationNavigation from \"./PresentationNavigation\";\n\nimport {connect} from 'react-redux';\nimport {updateSlid} from \"../../../actions\";\n\nclass EditSlidePanel extends Component {\n\n  updateCurrentSlid(slide) {\n    const {updateSlid} = this.props;\n\n    updateSlid(slide)\n  }\n\n  render() {\n\n    const {selectedSlide} = this.props;\n\n    return (\n      <div className={\"height-100 margin\"}>\n        {\n          selectedSlide &&\n          <Slid slide={selectedSlide} displayMode={\"FULL_MNG\"} updateCurrentSlide={(slide) => this.updateCurrentSlid(slide)}/>\n        }\n        <PresentationNavigation />\n      </div>\n    )\n\n  }\n}\n\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps,\n    selectedSlide: state.SelectedReducer.selectedSlide\n  }\n}\n\nexport default connect(\n  mapStateToProps, {updateSlid}\n)(EditSlidePanel)","let io = require('socket.io-client');\r\nlet axios = require('axios');\r\n\r\nexport default class Comm {\r\n  constructor() {\r\n    this.comm = {};\r\n    this.comm.io = {};\r\n    this.socket = \"\";\r\n    this.instance = axios.create();\r\n    this.emitOnConnect = this.emitOnConnect.bind(this);\r\n\r\n  }\r\n\r\n  toString() {\r\n    return '';\r\n  }\r\n\r\n  loadPres(presId, callback, callbackErr) {\r\n    this.instance.get('/loadPres')\r\n      .then(function (data) {\r\n        let size = Object.keys(data.data).length;\r\n        console.log(\"raw data\");\r\n        console.log(data.data);\r\n        let loadedPres = \"\";\r\n        if (size > 0) {\r\n          console.log(\"key\");\r\n          console.log(presId);\r\n          console.log(\"data\");\r\n          console.log(data.data[presId]);\r\n          loadedPres = data.data[presId];\r\n        }\r\n        callback(loadedPres);\r\n      })\r\n      .catch(function (error) {\r\n        callbackErr(error);\r\n      });\r\n\r\n  }\r\n\r\n  loadContent(callback, callbackErr) {\r\n    this.instance.get('/contents')\r\n      .then(function (data) {\r\n        //console.log(\"raw content data\");\r\n        //console.log(data.data);\r\n        let size = Object.keys(data.data).length;\r\n        let contentMap = {};\r\n        for (let i = 0; i < size; i++) {\r\n          let c_obj = data.data[Object.keys(data.data)[i]];\r\n          contentMap[c_obj.id] = c_obj;\r\n          // console.log(c_obj);\r\n        }\r\n\r\n        callback(contentMap);\r\n      })\r\n      .catch(function (error) {\r\n        callbackErr(error);\r\n      });\r\n\r\n  }\r\n\r\n  savPres(presJson, callbackErr) {\r\n    this.instance.post('/savePres', presJson)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        callbackErr(error);\r\n      });\r\n  }\r\n\r\n  savContent(contentJson, callback, callbackErr) {\r\n    this.instance.post('/contents', contentJson)\r\n      .then(function (response) {\r\n        callback(response);\r\n      })\r\n      .catch(function (error) {\r\n        callbackErr(error);\r\n      });\r\n  }\r\n\r\n  fileUpload(fileC, callback, callbackErr) {\r\n    let data = new FormData();\r\n    data.append('file', fileC);\r\n    this.instance.post('/file-upload', data)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        callback();\r\n      })\r\n      .catch(function (error) {\r\n        callbackErr(error);\r\n      });\r\n\r\n  }\r\n\r\n  emitOnConnect(message) {\r\n    console.log(\"message\");\r\n    console.log(\"socket\");\r\n    console.log(this.socket);\r\n    console.log(\"this.comm.io.uuid\");\r\n    console.log(this.comm.io.uuid);\r\n    this.socket.emit('data_comm', {'id': this.comm.io.uuid}, function (test) {\r\n      console.log(test);\r\n    });\r\n  }\r\n\r\n  socketConnection(uuid) {\r\n    this.socket = io.connect(process.env.SOCKET_URL);\r\n    this.comm.io.uuid = uuid;\r\n    this.socket.on('connection', message => {\r\n      this.emitOnConnect(message)\r\n    });\r\n\r\n    this.socket.on('newPres', function (socket) {\r\n\r\n    });\r\n    this.socket.on('slidEvent', function (socket) {\r\n\r\n    });\r\n\r\n    this.socket.on('sendSlideToClient',function(slide){\r\n      console.log(slide);\r\n    });\r\n  }\r\n\r\n  backward() {\r\n    this.socket.emit('slidEvent', {'CMD': \"PREV\"});\r\n  }\r\n\r\n  forward() {\r\n    this.socket.emit('slidEvent', {'CMD': \"NEXT\"});\r\n  }\r\n\r\n  play(presUUID) {\r\n    this.socket.emit('slidEvent', {'CMD': \"START\", 'PRES_ID': presUUID});\r\n  }\r\n\r\n  pause() {\r\n    this.socket.emit('slidEvent', {'CMD': \"PAUSE\"});\r\n  }\r\n\r\n  begin() {\r\n    this.socket.emit('slidEvent', {'CMD': \"BEGIN\"});\r\n  }\r\n\r\n  end() {\r\n    this.socket.emit('slidEvent', {'CMD': \"END\"});\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\nimport './main.css';\nimport '../../lib/bootstrap-4.1.3-dist/css/bootstrap.min.css';\n\nimport {connect} from 'react-redux';\nimport {updateContentMap, updatePresentation} from '../../actions';\n\nimport BrowseContentPanel from \"../browseContentPanel/containers/BrowseContentPanel\";\nimport Slid from \"../common/slid/containers/Slid\";\nimport BrowsePresentationPanel from \"../browsePresentationPanel/containers/BrowsePresentationPanel\";\nimport EditSlidePanel from \"../editSlidePanel/containers/EditSlidPanel\";\n\nimport Comm from '../../services/Comm';\nimport Tools from '../../services/Tools';\n\nclass Main extends Component {\n\n  componentDidMount() {\n    const {updateContentMap, updatePresentation} = this.props;\n\n    this.comm = new Comm();\n\n    this.comm.loadContent((contentMap) => {\n      updateContentMap(contentMap);\n    }, (e) => {\n      console.error(e);\n    });\n\n    this.comm.loadPres('efa0a79a-2f20-4e97-b0b7-71f824bfe349', (pres) => {\n      updatePresentation(pres);\n    }, (e) => {\n      console.error(e);\n    });\n\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.cmdPres === \"SAVE_CMD\" && prevProps.cmdPres !== \"SAVE_CMD\") {\n      this.comm.savPres(this.props.presentation, (err) => console.error(err));\n    }\n  }\n\n  render() {\n\n    return (\n\n      <div className='container-fluid height-100'>\n        <div className=\"row height-100\">\n          <div className='col-md-3 col-lg-3 height-100 vertical-scroll'>\n            <BrowsePresentationPanel/>\n          </div>\n          <div className='col-md-6 col-lg-6 height-100 vertical-scroll'>\n            <EditSlidePanel/>\n          </div>\n          <div className='col-md-3 col-lg-3 height-100 vertical-scroll'>\n            <BrowseContentPanel/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...ownProps,\n    cmdPres: state.CommandReducer.cmdPres,\n    presentation: state.UpdateModelReducer.presentation\n\n  }\n}\n\nexport default connect(\n  mapStateToProps, {updateContentMap, updatePresentation}\n)(Main)","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {} from \"../actions\";\n\nimport Main from \"../components/mainPanel/Main\";\n\nclass HomePage extends Component {\n\n  render() {\n\n    return (\n      <div className={'mainContainer'}>\n        <Main />\n      </div>\n    );\n  }\n\n}\n\n\nfunction mapStateToProps(state, ownProps){\n  return {\n  }\n}\n\nexport default connect(\n  mapStateToProps, {}\n)(HomePage)","import React, { Component } from 'react';\nimport './App.css';\nimport HomePage from \"./pages/HomePage\";\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider>\n        <div className=\"app\">\n          <HomePage />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst asyncDispatchMiddleware = store => next => action => {\n  let syncActivityFinished = false;\n  let actionQueue = [];\n\n  function flushQueue() {\n    actionQueue.forEach(a => store.dispatch(a));\n    actionQueue = [];\n  }\n\n  function asyncDispatch(asyncAction) {\n    actionQueue = actionQueue.concat([asyncAction]);\n\n    if (syncActivityFinished) {\n      flushQueue();\n    }\n  }\n\n  const actionWithAsyncDispatch = Object.assign({}, action, {asyncDispatch});\n\n  next(actionWithAsyncDispatch);\n  syncActivityFinished = true;\n  flushQueue();\n};\n\nexport default asyncDispatchMiddleware;\n","import {setSelectedSlid, contentAdded, sendNavCmd} from \"../actions\";\nimport Comm from \"../services/Comm\";\nconst comm = new Comm();\n\nconst Tools = require('../services/Tools.js');\n\nconst reducer = (state, action) => {\n\n  if (!state) {\n    state = {\n      presentation: undefined,\n      contentMap: undefined,\n      updatedSlide: undefined\n    };\n  }\n\n\n  switch (action.type) {\n\n    case 'UPDATE_PRESENTATION':\n\n      action.asyncDispatch(sendNavCmd());\n\n      return {\n        ...state,\n        presentation: {\n          ...action.presentation\n        }\n      };\n\n    case 'UPDATE_PRESENTATION_SLIDS':\n\n      let pres = state.presentation;\n\n      let newSlide = {\n          id: Tools.generateUUID(),\n          title: \"\",\n          txt: \"\",\n          contentMap: {\n            \"1\": \"\"\n          }\n      };\n\n      if(action.updatedSlide.add) {\n        pres.slidArray.push(newSlide);\n        action.asyncDispatch(setSelectedSlid(newSlide));\n      }\n      else {\n        console.log(action.updatedSlide)\n\n        let index = pres.slidArray.findIndex((slide) => {\n          return slide.id === action.updatedSlide.id;\n        });\n\n        if(index > -1) {\n          if(action.updatedSlide.remove) {\n            pres.slidArray.splice(index, 1);\n\n            action.asyncDispatch(setSelectedSlid(null));\n          }\n          else {\n            pres.slidArray[index] = action.updatedSlide;\n            action.asyncDispatch(setSelectedSlid(action.updatedSlide));\n          }\n        }\n\n      }\n\n      action.asyncDispatch(sendNavCmd());\n\n      return {\n        ...state,\n        presentation: {\n          ...pres\n        }\n      };\n\n    case 'UPDATE_CONTENT_MAP':\n\n      return {\n        ...state,\n        contentMap: {\n          ...action.contentMap\n        }\n      };\n\n    case 'ADD_CONTENT':\n\n\n      let id = Tools.generateUUID();\n\n      let fileContent = {};\n\n      if(action.content.type === 'img') {\n        fileContent = {\n          fileName: id + action.content.ext.replace(\"image/\", '.'),\n          src: \"/contents/\" + id,\n          data: action.content.data\n        }\n      }\n\n      let newContent = {\n        id: id,\n        src: action.content.src,\n        type: action.content.type,\n        title: action.content.title,\n        fileName: null,\n        ...fileContent\n      };\n\n      comm.savContent(newContent,\n        (resp) => {\n          action.asyncDispatch(contentAdded(resp.data))\n        },\n        (err) => {\n          console.error(err);\n        });\n\n\n      return {\n        ...state\n      };\n\n    case 'CONTENT_ADDED':\n      \n      return {\n        ...state,\n        contentMap: {\n          ...state.contentMap,\n          [action.newContent.id]: action.newContent\n        }\n      };\n\n    default:\n      return {\n        ...state\n      }\n  }\n\n};\n\n\nexport default reducer;","\nconst reducer = (state, action) => {\n\n  if (!state) {\n    state = {\n      selectedSlide: undefined\n    };\n  }\n\n\n  switch (action.type) {\n\n    case 'UPDATE_SELECTED_SLID':\n\n      return {\n        ...state,\n        selectedSlide: action.selectedSlide\n      };\n\n    case 'UPDATE_DRAGGED_ELT':\n\n      return {\n        ...state,\n        draggedElt: action.id\n      };\n\n    default:\n\n      return {\n        ...state\n      }\n  }\n\n};\n\n\nexport default reducer;","import Comm from \"../services/Comm\";\nimport Tools from \"../services/Tools\";\nconst comm = new Comm();\n\nconst uuid = Tools.generateUUID();\ncomm.socketConnection(uuid);\n\n\nconst reducer = (state, action) => {\n\n  if (!state) {\n    state = {\n    };\n  }\n\n\n  switch (action.type) {\n\n    case 'COMMAND_PRESENTATION':\n\n      switch (action.action) {\n        case \"FIRST\":\n          comm.begin();\n          break;\n        case \"PREVIOUS\":\n          comm.backward();\n          break;\n        case \"START\":\n          comm.play(action.pres.id);\n          break;\n        case \"STOP\":\n          comm.pause();\n          break;\n        case \"NEXT\":\n          comm.forward();\n          break;\n        case \"LAST\":\n          comm.end();\n          break;\n      }\n\n      return {\n        ...state,\n        cmdPres: action.action\n      };\n\n    default:\n\n      return {\n        ...state\n      }\n  }\n\n};\n\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport UpdateModelReducer from './UpdateModelReducer';\nimport SelectedReducer from './SelectedReducer';\nimport CommandReducer from './CommandReducer';\n\nconst appReducers = combineReducers({\n  UpdateModelReducer,\n  SelectedReducer,\n  CommandReducer\n});\n\nexport default appReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport asyncDispatchMiddleware from './middleware';\nimport AppStore from './reducers';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\n\nlet store = createStore(AppStore, applyMiddleware(asyncDispatchMiddleware));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","let Tools = {};\r\n\r\nTools.generateUUID = function () {\r\n  let d = new Date().getTime();\r\n  let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n  return uuid;\r\n};\r\n\r\nTools.getNextSlidIndex = function (array, slidId) {\r\n  let index = -1;\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (slidId === array[i].id) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  if (index + 1 < array.length) {\r\n    return index + 1;\r\n  }\r\n  return array.length - 1;\r\n};\r\n\r\nTools.getPrevSlidIndex = function (array, slidId) {\r\n  let index = -1;\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (slidId === array[i].id) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  if (index - 1 >= 0) {\r\n    return index - 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\n\r\nmodule.exports = Tools;"],"sourceRoot":""}